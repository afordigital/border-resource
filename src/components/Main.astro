---

---

<main id="container">
  <div class="design-tool">
    <img
      src="/public/svgs/sparkles.svg"
      width="16"
      height="16"
      alt="sparkles icon"
    />
    <p class="design-tool-text">Design tool</p>
  </div>
  <hgroup>
    <h1>Perfect Your Layouts with Ease</h1>
    <p class="title-description">
      Discover how padding and border-radius interact in real time with this
      dynamic, hands-on tool.
    </p>
  </hgroup>
  <section class="action-container">
    <p class="outer-border-text">48px</p>
    <div class="overflow-box">
      <div class="outer-box" style="border-radius:var(--outerBorder)">
        <div class="inner-box" style="var(--innerBorder)">
          <p class="inner-border-text">48px</p>
        </div>
      </div>
    </div>
    <div class="sliders">
      <label class="inputs-wrapper">
        <input type="checkbox" class="checkbox" />
        <span> Zoom In </span>
      </label>
      <label>
        <span> Outer border </span>
        <div class="inputs-wrapper">
          <input
            class="range outerBorder"
            type="range"
            min="0"
            max="100"
            value="48"
          />
          <input
            type="number"
            id="outerBorderText"
            min="0"
            max="100"
            value="48"
          />
        </div>
      </label>
      <label>
        <span> Padding </span>
        <div class="inputs-wrapper">
          <input
            class="range padding"
            type="range"
            min="0"
            max="100"
            value="36"
          />
          <input type="number" id="paddingText" min="0" max="100" value="36" />
        </div>
      </label>
      <label>
        <span> Inner Border </span>
        <div class="inputs-wrapper">
          <input
            class="range innerBorder"
            type="range"
            min="0"
            max="100"
            value="12"
          />
          <input
            type="number"
            id="innerBorderText"
            min="0"
            max="100"
            value="12"
          />
        </div>
      </label>
    </div>
  </section>
</main>

<script>
  const sliders = ["outerBorder", "padding", "innerBorder"] as const;
  const checkboxInput = document.querySelector(".checkbox");

  type SliderKey = (typeof sliders)[number];

  type SliderElements = {
    range: HTMLInputElement;
    text: HTMLInputElement;
  };

  const elements: Record<SliderKey, SliderElements> = sliders.reduce(
    (acc, key) => {
      const range = document.querySelector<HTMLInputElement>(`.${key}`);
      const text = document.querySelector<HTMLInputElement>(`#${key}Text`);
      if (range && text) acc[key] = { range, text };
      return acc;
    },
    {} as Record<SliderKey, SliderElements>
  );

  function updateStyles(changed: SliderKey) {
    let outer = parseInt(elements.outerBorder.range.value, 10);
    let padding = parseInt(elements.padding.range.value, 10);
    let inner = parseInt(elements.innerBorder.range.value, 10);

    if (changed === "outerBorder") inner = outer - padding;
    if (changed === "padding") outer = inner + padding;
    if (changed === "innerBorder") outer = padding + inner;

    elements.outerBorder.range.value = outer.toString();
    elements.outerBorder.text.value = outer.toString();
    elements.padding.range.value = padding.toString();
    elements.padding.text.value = padding.toString();
    elements.innerBorder.range.value = inner.toString();
    elements.innerBorder.text.value = inner.toString();

    document.documentElement.style.setProperty("--outerBorder", `${outer}px`);
    document.documentElement.style.setProperty("--padding", `${padding}px`);
    document.documentElement.style.setProperty("--innerBorder", `${inner}px`);
  }

  sliders.forEach((key) => {
    elements[key]?.range.addEventListener("input", () => updateStyles(key));
    elements[key]?.text.addEventListener("input", () => {
      elements[key].range.value = elements[key].text.value;
      updateStyles(key);
    });
  });

  checkboxInput?.addEventListener("change", (event) => {
    const isChecked = (event.target as HTMLInputElement).checked;

    if (isChecked) {
      document.documentElement.style.setProperty("--zoom", "1.5");
    } else {
      document.documentElement.style.setProperty("--zoom", "1");
    }
  });
</script>

<style>
  main {
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 36px;
    text-align: center;
  }

  label {
    display: flex;
    flex-direction: column;
    align-items: start;
    gap: 8px;
  }

  .range {
    width: 150px;
  }

  .range::-webkit-slider-runnable-track {
    -webkit-appearance: none;
    background-color: #dfd6f0;
    border-radius: 4px 0 0 4px;
    height: 28px;
    cursor: grab;
  }

  .range::-ms-thumb {
    -webkit-appearance: none;
    width: 100px;
    background: goldenrod;
  }

  .design-tool {
    position: relative;
    width: fit-content;
  }

  .design-tool {
    display: flex;
    align-items: center;
    gap: 8px;
    border-radius: 10px;
    width: fit-content;
    height: 36px;
    margin: 100px auto 0;
    border: 2px solid transparent;
    background:
      linear-gradient(to bottom, #281736, #08011f) padding-box,
      linear-gradient(to bottom, #dfd6f0, transparent) border-box;

    padding: 8px 32px;
  }

  .range {
    width: 400px;
  }

  .inputs-wrapper {
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: 4px;
  }

  .action-container {
    display: flex;
    gap: 36px;
    display: relative;
    font-family: "Manrope";
  }

  .overflow-box {
    width: 250px;
    height: 250px;
    overflow: hidden;
    z-index: 5;
  }

  .outer-border-text {
    position: absolute;
    weight: 700;
    top: 0;
    left: -32px;
    z-index: 10;
  }

  .outer-box {
    background: linear-gradient(
      to right,
      rgba(248, 245, 253, 0.5),
      rgba(223, 214, 240, 0.5)
    );
    width: 250px;
    height: 250px;
    padding: var(--padding);
    border-radius: var(--outerBorder);
    transform: scale(var(--zoom));
    transform-origin: top left;
    transition: transform 0.2s ease-in-out;
  }

  .outer-box::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: calc(100% - 6px);
    height: calc(100% - 6px);
    border-radius: var(--outerBorder);
    border: 6px solid #dfd6f0;

    clip-path: polygon(0 0, 50% 0, 0 50%);
    pointer-events: none;
  }

  .inner-box {
    width: 100%;
    height: 100%;
    background: #12022a;
    border-radius: var(--innerBorder);
    position: relative;
  }

  .inner-border-text {
    font-weight: 700;
    position: absolute;
    top: 16px;
    left: 16px;
  }

  .inner-box::before {
    content: "";
    position: absolute;
    top: -2px;
    left: -2px;
    width: 100%;
    height: 100%;
    border-radius: var(--innerBorder);
    border: 6px solid #dfd6f0;

    clip-path: polygon(0 0, 50% 0, 0 50%);
    pointer-events: none;
  }

  .sliders {
    display: flex;
    flex-direction: column;
    gap: 16px;
  }

  hgroup {
    max-width: 800px;
    display: flex;
    flex-direction: column;
    gap: 16px;
    align-items: center;
  }

  h1 {
    font-size: 72px;
    line-height: 1.2;
    font-weight: bold;
    font-family: "Aeonik", sans-serif;
  }

  .design-tool-text {
    color: #dfd6f0;
  }

  .title-description {
    color: #cfcfcf;
    font-size: 18px;
    max-width: 50ch;
    line-height: 1.4;
    font-family: "Manrope", sans-serif;
  }
</style>
